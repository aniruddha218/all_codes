length(samples)
#dont.knw<-my_ccle[which(is.element(my_ccle[, "ID"],(unique(my_ccle[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_ccle[which(as.character(my_ccle$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.3) # for positive valus greater than 0.3
#daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for all values greater than mod 0.3
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.2)  # for plots
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
final.matrix
#write.table(final.matrix,"C:/Users/apawar/Documents/lab/lijuin/data_for_paper/CCLE_copynumber_brca_FGA_point1_mod.txt", quote=F, sep="\t",
#col.names=T, row.names=F )
attempt.2<-final.atrix
attempt.2<-final.matrix
#buliding script
samples<-unique(my_ccle[,"ID"])
length(samples)
#dont.knw<-my_ccle[which(is.element(my_ccle[, "ID"],(unique(my_ccle[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_ccle[which(as.character(my_ccle$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.3) # for positive valus greater than 0.3
#daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for all values greater than mod 0.3
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.1)  # for plots
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
final.matrix
attempt.1=final.matrix
head(my_ccle)
#buliding script
samples<-unique(my_ccle[,"ID"])
length(samples)
#dont.knw<-my_ccle[which(is.element(my_ccle[, "ID"],(unique(my_ccle[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_ccle[which(as.character(my_ccle$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.3) # for positive valus greater than 0.3
#daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for all values greater than mod 0.3
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for plots
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
attempt.3=final.matrix
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="CCLE @ different points")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
legend(1.1,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3)
legend(-0.5,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3)
legend(0,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3)
legend(0,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1)
)
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="CCLE @ different points")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
legend(0,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1)
)
legend(1,1.5,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1))
legend(1,2,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1))
legend(1,2.2,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1))
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="CCLE @ different points")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
legend(1,2.2,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1))
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="CCLE @ different points")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
legend(1,2.1,c("T=0.1","T=0.2","T=0.3"),col=1:3,lty=c(1,1,1))
#buliding script
samples<-unique(my_ccle[,"ID"])
length(samples)
#dont.knw<-my_ccle[which(is.element(my_ccle[, "ID"],(unique(my_ccle[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_ccle[which(as.character(my_ccle$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.3) # for positive valus greater than 0.3
#daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for all values greater than mod 0.3
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.4)  # for plots
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
attempt.4=final.matrix
head(my_ccle)
#buliding script
samples<-unique(my_ccle[,"ID"])
length(samples)
#dont.knw<-my_ccle[which(is.element(my_ccle[, "ID"],(unique(my_ccle[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_ccle[which(as.character(my_ccle$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.3) # for positive valus greater than 0.3
#daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3)  # for all values greater than mod 0.3
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.5)  # for plots
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
attempt.5=final.matrix
plot(density(as.numeric(attempt.4[,2])),xlab="",main="",col=4)
plot(density(as.numeric(attempt.5[,2])),xlab="",main="",col=5)
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
>
legend(1,2.1,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,2.1,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",ylim=c(0:5),main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,2.1,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",ylim=c(0,5),main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,2.1,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",ylim=c(0,5),main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,4.5,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
#buliding script
samples<-unique(my_tcga[,"ID"])
length(samples)
#dont.knw<-my_tcga[which(is.element(my_tcga[, "ID"],(unique(my_tcga[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_tcga[which(as.character(my_tcga$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.2)# for positive valus greater than 0.2
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.05) ## for all values greater than mod 0.2
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
pttempt.05=final.matrix
samples<-unique(my_tcga[,"ID"])
length(samples)
#dont.knw<-my_tcga[which(is.element(my_tcga[, "ID"],(unique(my_tcga[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_tcga[which(as.character(my_tcga$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.2)# for positive valus greater than 0.2
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.1) ## for all values greater than mod 0.2
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
pttempt.1=final.matrix
samples<-unique(my_tcga[,"ID"])
length(samples)
#dont.knw<-my_tcga[which(is.element(my_tcga[, "ID"],(unique(my_tcga[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_tcga[which(as.character(my_tcga$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.2)# for positive valus greater than 0.2
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.15) ## for all values greater than mod 0.2
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
pttempt.15=final.matrix
samples<-unique(my_tcga[,"ID"])
length(samples)
#dont.knw<-my_tcga[which(is.element(my_tcga[, "ID"],(unique(my_tcga[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_tcga[which(as.character(my_tcga$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.2)# for positive valus greater than 0.2
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.2) ## for all values greater than mod 0.2
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
pttempt.2=final.matrix
samples<-unique(my_tcga[,"ID"])
length(samples)
#dont.knw<-my_tcga[which(is.element(my_tcga[, "ID"],(unique(my_tcga[, "ID"])))), ]
#samples[1:10]
final.matrix=NULL
final.matrix1=NULL
final.matrix2=NULL
for (i in  (1:length(samples)))
{ name.id=NULL
name.id.block=NULL
total=NULL
daat=NULL
ans=NULL
select.l=NULL
name.id<-samples[i]
name.id.block<-my_tcga[which(as.character(my_tcga$ID)==as.character(name.id)),]
name.id.block[,"start-end"]<-(name.id.block[,4]-name.id.block[,3])
total=sum(as.numeric(name.id.block[,"start-end"]))
#daat=subset(name.id.block,name.id.block$seg.mean>0.2)# for positive valus greater than 0.2
daat=subset(name.id.block,abs(name.id.block$seg.mean)>0.3) ## for all values greater than mod 0.2
select.l=sum(as.numeric(daat[,"start-end"]))
ans=select.l/total
#print (name.id)
#print (ans)
final.matrix1<-rbind(final.matrix1,as.character(name.id))
final.matrix2<-rbind(final.matrix2,as.numeric(ans))
}
final.matrix=cbind(final.matrix1,final.matrix2)
colnames(final.matrix)<-c("Name","FGA")
#final.matrix
pttempt.3=final.matrix
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,5),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(1,4.5,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,4),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(0.8,3.8,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,4),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(0.9,3.95,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
legend(0.99,3.95,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
legend(0.97,3.95,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
#plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,4),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(0.97,3.95,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
legend(0.96,3.95,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
legend(0.95,4,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,4),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(0.95,4,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
legend(0.94,4.1,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
#plot(density(as.numeric(attempt.1[,2])))
plot(density(as.numeric(pttempt.05[,2])),xlab="FGA",ylim=c(0,4),main="Tumors @ different Thresholds")
lines(density(as.numeric(pttempt.1[,2])),col=2)
lines(density(as.numeric(pttempt.15[,2])),col=3)
lines(density(as.numeric(pttempt.2[,2])),col=4)
lines(density(as.numeric(pttempt.3[,2])),col=5)
legend(0.94,4.1,c("T=0.05","T=0.1","T=0.15","T=0.2","T=0.3"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",ylim=c(0,4.5),main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,4.5,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(my_tcga[,2]))
)
hist((as.numeric(my_tcga[,2])
)
)
hist(abs(as.numeric(my_tcga[,2])))
hist(abs(as.numeric(my_tcga[,2])),ncalss=100)
hist(abs(as.numeric(my_tcga[,6])),ncalss=100)
hist(abs(my_tcga[,6]),nclass=100)
hist((my_tcga[,6]),nclass=100)
hist((my_tcga[,6]))
hist((my_tcga[,6])n,class=25)
hist((my_tcga[,6]),nclass=25)
hist((my_tcga[,6]),nclass=50)
abline(v=0.05,col=4)
abline(v=0.1,col=4)
hist((my_tcga[,6]),nclass=50)
abline(v=0.1,col=4)
hist((my_tcga[,6]),nclass=50,main="Histogram of TCGA",xlab="CN values (log2)")
abline(v=0.1,col=4)
hist((my_ccle[,6]),nclass=50,main="Histogram of CCLE",xlab="CN values (log2)")
abline(v=0.2,col=4)
plot(density(as.numeric(attempt.1[,2])),xlab="FGA",ylim=c(0,4.5),main="Cell lines @ different Thresholds")
lines(density(as.numeric(attempt.2[,2])),col=2)
lines(density(as.numeric(attempt.3[,2])),col=3)
lines(density(as.numeric(attempt.4[,2])),col=4)
lines(density(as.numeric(attempt.5[,2])),col=5)
legend(1,4.5,c("T=0.1","T=0.2","T=0.3","T=0.4","T=0.5"),col=1:5,lty=c(1,1,1,1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,4.5),main="")
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(1,4.5,c("Cellline=.3","Tumor=0.2"),col=(1,4),lty=c(1,1))
legend(1,4.5,c("Cellline=.3","Tumor=0.2"),col=c(1,4),lty=c(1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,4.5),main="",col=2)
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(0.8,4.5,c("Cellline=.3","Tumor=0.2"),col=c(2,4),lty=c(1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,4.5),main="",col=2)
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(0.6,4.5,c("Cellline=.3","Tumor=0.2"),col=c(2,4),lty=c(1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,3),main="",col=2)
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(0.6,2.9,c("Cellline=.3","Tumor=0.2"),col=c(2,4),lty=c(1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,3),main="",col=2)
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(0.6,2.9,c("Cellline=0.3","Tumor=0.2"),col=c(2,4),lty=c(1,1))
mut.ccle<-read.table("C:/Users/apawar/Documents/lab/lijuin/data_for_paper/mutation/ccle_mut/ccle_breast_intersect_ans.txt", sep="\t",header=F)
mut.tcga<-read.table ("C:/Users/apawar/Documents/lab/lijuin/data_for_paper/mutation/tcga_mut/tcga_breast_intersect_ans.txt", sep="\t",header=F)
View(mut.tcga)
View(mut.tcga)
plot(density(as.numeric(mut.tcga[,4])),xlab="Mutations per million bases", main="",col=2)
abline(density(as.numeric(mut.ccle[,4])),col=4)
abline(density(as.numeric(mut.ccle[,4])),col=4)
plot(density(as.numeric(mut.tcga[,4])),xlab="Mutations per million bases", main="",col=2)
abline(density(as.numeric(mut.ccle[,4])),col=4)
View(mut.ccle)
plot(density(as.numeric(mut.tcga[,4])),xlab="Mutations per million bases", main="",col=4)
abline(density(as.numeric(mut.ccle[,4])),col=2)
plot(density(as.numeric(mut.ccle[,4])),col=2)
plot(density(as.numeric(mut.tcga[,4])),xlab="Mutations per million bases", main="",col=4)
lines(density(as.numeric(mut.ccle[,4])),col=2)
legend(9,0.6,c("Tumor","Cellline"),col=c(4,2),lty=c(1,1))
plot(density(as.numeric(attempt.3[,2])),xlab="FGA",ylim=c(0,3),main="",col=2)
lines(density(as.numeric(pttempt.2[,2])),col=4)
legend(0.6,2.9,c("Tumor=0.2","Cellline=0.3"),col=c(4,2),lty=c(1,1))
plot(density(as.numeric(mut.tcga[,4])),xlab="Mutations per million bases", main="Mutations",col=4)
lines(density(as.numeric(mut.ccle[,4])),col=2)
legend(9,0.6,c("Tumor","Cellline"),col=c(4,2),lty=c(1,1))
plot(density(as.numeric(mut.ccle[,4])),col=2)
plot(density(as.numeric(mut.tcga[,4])),xlim=(0:18),xlab="Mutations per million bases", main="Mutations",col=4)
lines(density(as.numeric(mut.ccle[,4])),col=2)
legend(9,0.6,c("Tumor","Cellline"),col=c(4,2),lty=c(1,1))
plot(density(as.numeric(mut.tcga[,4])),xlim=c(0,18),xlab="Mutations per million bases", main="Mutations",col=4)
lines(density(as.numeric(mut.ccle[,4])),col=2)
legend(15,0.6,c("Tumor","Cellline"),col=c(4,2),lty=c(1,1))
plot(density(as.numeric(mut.tcga[,4])),xlim=c(0,18),xlab="Mutations per million bases", main="Mutations",col=4)
lines(density(as.numeric(mut.ccle[,4])),col=2)
legend(13,0.6,c("Tumor","Cellline"),col=c(4,2),lty=c(1,1))
